# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
    - 'src/Application/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'src/Application/**'

env:
  registryName: '42px542r5w6icmpnpreg.azurecr.io'
  repositoryName: 'techexcel/dotnetcoreapp'
  dockerFolderPath: 'src/Application/src/RazorPagesTestSample'
  tag: ${{ github.run_number }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore ./src/Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj
      
    - name: Build
      run: dotnet build ./src/Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj --no-restore
      
    - name: Test
      run: dotnet test --verbosity normal ./src/Application/tests/RazorPagesTestSample.Tests/RazorPagesTestSample.Tests.csproj
    - uses: actions/github-script@v6
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Workflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });
  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Build and push Docker image
      uses: azure/docker-login@v2
      with:
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    - name: Build and push Docker image
      run: |
        docker build ${{ env.dockerFolderPath }} -t ${{ env.registryName }}/${{ env.repositoryName }}:${{ env.tag }}
        docker push ${{ env.registryName }}/${{ env.repositoryName }}:${{ env.tag }}

  deploy-dev:
  
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    needs: docker
    environment:
      name: dev
      url: https://42px542r5w6ic-dev.azurewebsites.net/
    
    steps:
      - name: 'Login via Azure CLI'
        # Log into Azure
        uses: azure/login@v2.1.1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - uses: azure/webapps-deploy@v2
        with:
          app-name: '42px542r5w6ic-dev'
          images:  ${{ env.registryName }}.azurecr.io/techexcel/dotnetcoreapp:${{github.run_number}}

  # deploy-test:
  
  #   runs-on: ubuntu-latest
  #   needs: deploy-dev
  #   environment:
  #     name: test
  #     url: https://42px542r5w6ic-test.azurewebsites.net/
    
  #   steps:
  #   - uses: actions/checkout@v3
    
  #   - name: 'Login via Azure CLI'
  #     # Log into Azure
  #     uses: azure/login@v2.1.1
  #     with:
  #       client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #       tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  #   - uses: azure/webapps-deploy@v2
  #     with:
  #       app-name: '42px542r5w6ic-test'
  #       images: ${{ env.registryName }}.azurecr.io/techexcel/dotnetcoreapp:${{github.run_number}}

  # deploy-prod:
  
  #   runs-on: ubuntu-latest
  #   needs: deploy-test
  #   environment:
  #     name: prod
  #     url: https://42px542r5w6ic-prod.azurewebsites.net/
    
  #   steps:
  #   - uses: actions/checkout@v3
    
  #   - name: 'Login via Azure CLI'
  #     # Log into Azure
  #     uses: azure/login@v2.1.1
  #     with:
  #       client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #       tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  #   - uses: azure/webapps-deploy@v2
  #     with:
  #       app-name: '42px542r5w6ic-prod'
  #       images: ${{ env.registryName }}.azurecr.io/techexcel/dotnetcoreapp:${{github.run_number}}
